@startuml test

!include <C4/C4_Container>
' !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define MATERIAL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/material

!include MATERIAL/vpn_key.puml
!include MATERIAL/insert_drive_file.puml
!include FONTAWESOME/users.puml
!include FONTAWESOME/braille.puml
!include DEVICONS/redis.puml

LAYOUT_WITH_LEGEND()

Person(user, "Пользователи", "", $sprite="users")
Container(loadbalanser1, "Балансировщик", "Балансировщик нагрузки", "", $sprite="braille")

System_Boundary(chat, "Инфраструктура чата") {
    Container(wsmanager, "WebSocket manager", "", "Управление сопоставлением содинений и пользователей")
    ContainerDb(wsmanagerdb, "Redis", "", "", $sprite="redis")
}

Container_Boundary(api, "API Application") {

}

Enterprise_Boundary(system, "Инфраструктурные сервисы") {
    Container_Ext(auth, "Сервер аутентификации", "SSO", $sprite = "vpn_key")
    Container_Ext(blob, "Файловый сервер", "SeaweedFS", $sprite = "insert_drive_file")
}


Rel(user, loadbalanser1, "", "")
BiRel(wsmanager, wsmanagerdb, "", "")
' Rel_L(user2, spa, "Uses", "https")
' Rel(spa, api, "Uses", "https")
' Rel_R(api, db, "Reads/Writes")

@endumlP